[{"/Users/Oleg.Plevan/dev/dry-eyeland/src/index.js":"1","/Users/Oleg.Plevan/dev/dry-eyeland/src/App.js":"2","/Users/Oleg.Plevan/dev/dry-eyeland/src/three-helper.js":"3","/Users/Oleg.Plevan/dev/dry-eyeland/src/helper.js":"4","/Users/Oleg.Plevan/dev/dry-eyeland/src/useWindowDimensions.js":"5","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/OcularSummit.js":"6","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/NeuralCaverns.js":"7","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/Home.js":"8","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/TearFilm.js":"9","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/PrevalencePoint.js":"10","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/NotFound.js":"11","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/Header.js":"12","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/Footer.js":"13","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/CookieBanner.js":"14","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/ScrollContainer.js":"15","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/SignUp.js":"16","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/FeatureText.js":"17","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/NextUp.js":"18","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/TextBlock.js":"19"},{"size":286,"mtime":1708000460703,"results":"20","hashOfConfig":"21"},{"size":8956,"mtime":1708000852880,"results":"22","hashOfConfig":"21"},{"size":7211,"mtime":1708000452203,"results":"23","hashOfConfig":"21"},{"size":753,"mtime":1708000464624,"results":"24","hashOfConfig":"21"},{"size":583,"mtime":1708000447868,"results":"25","hashOfConfig":"21"},{"size":3013,"mtime":1708007217964,"results":"26","hashOfConfig":"21"},{"size":6180,"mtime":1708008784146,"results":"27","hashOfConfig":"21"},{"size":1692,"mtime":1708012930348,"results":"28","hashOfConfig":"21"},{"size":5888,"mtime":1708009229871,"results":"29","hashOfConfig":"21"},{"size":2691,"mtime":1708009508929,"results":"30","hashOfConfig":"21"},{"size":249,"mtime":1707995091094,"results":"31","hashOfConfig":"21"},{"size":2590,"mtime":1708002618444,"results":"32","hashOfConfig":"21"},{"size":2783,"mtime":1708014176294,"results":"33","hashOfConfig":"21"},{"size":970,"mtime":1708012595788,"results":"34","hashOfConfig":"21"},{"size":2429,"mtime":1707995091082,"results":"35","hashOfConfig":"21"},{"size":1849,"mtime":1708003960435,"results":"36","hashOfConfig":"21"},{"size":583,"mtime":1707995091082,"results":"37","hashOfConfig":"21"},{"size":747,"mtime":1708008285991,"results":"38","hashOfConfig":"21"},{"size":854,"mtime":1707995091083,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"11ya0sv",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"/Users/Oleg.Plevan/dev/dry-eyeland/src/index.js",[],["86","87"],"/Users/Oleg.Plevan/dev/dry-eyeland/src/App.js",["88","89"],"import './styles/global.scss';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\nimport { Scene, TextureLoader } from 'three';\n\nimport { UseThree, ZoomBlurImage, zoomBlurShader } from './three-helper';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\nimport gsap, { Power1 } from 'gsap';\n\nimport Data from './pageData.json';\n\nimport Home from './views/Home';\nimport OcularSummit from './views/OcularSummit';\nimport NeuralCaverns from './views/NeuralCaverns';\nimport TearFilm from './views/TearFilm';\nimport PrevalencePoint from './views/PrevalencePoint';\nimport NotFound from './views/NotFound';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport CookieBanner from './components/CookieBanner';\nimport { getCookie, setCookie } from './helper';\nimport useWindowDimensions from './useWindowDimensions';\n\nfunction App() {\n  let location = useLocation();\n  let history = useHistory();\n  const [textureLoaded, setTextureLoaded] = useState(false);\n  let scene, composer;\n  const threeRef = useRef();\n  const zoomBlurPass = useRef();\n  const imageRef = useRef();\n  const loader = new TextureLoader();\n\n  const { width, height } = useWindowDimensions(); // listens for view width change\n  const aspectRatio = height / width;\n  // get the screen width\n  const breakpoint = 768;\n  const screenWidth = width <= breakpoint || (aspectRatio > 1 && aspectRatio < 1.5);\n\n  console.log(aspectRatio);\n\n  var mapImage;\n  var homeImage;\n  if (screenWidth) {\n    mapImage = require('./assets/map-image-mobile.jpg').default;\n    homeImage = require('./assets/home-background-m.jpg').default;\n  } else {\n    mapImage = require('./assets/map-image.jpg').default;\n    homeImage = require('./assets/home-background.jpg').default;\n  }\n\n  useEffect(() => {\n    const lastPage = getCookie('lastPage');\n    if (lastPage && lastPage !== location.pathname) {\n      history.push(lastPage);\n      window.location.reload();\n    }\n    //load three instance\n    threeRef.current = UseThree().init({\n      canvas: document.getElementById('map-container'),\n    });\n\n    initScene();\n    setTimeout(() => {\n      imageRef.current.resize();\n    }, 500);\n    animate();\n  }, []);\n\n  function initScene() {\n    scene = new Scene();\n    imageRef.current = ZoomBlurImage(threeRef.current);\n\n    const toLoad = location.pathname === '/' ? homeImage : mapImage;\n    imageRef.current.setMap(\n      loader.load(toLoad, (texture) => {\n        imageRef.current.textureName = location.pathname === '/' ? 'home' : 'map';\n        imageRef.current.resize();\n\n        return texture;\n      })\n    );\n\n    scene.add(imageRef.current.mesh);\n\n    composer = new EffectComposer(threeRef.current.renderer);\n    composer.addPass(new RenderPass(scene, threeRef.current.camera));\n    zoomBlurPass.current = new ShaderPass(zoomBlurShader);\n    zoomBlurPass.current.renderToScreen = true;\n    composer.addPass(zoomBlurPass.current);\n\n    threeRef.current.onAfterResize(() => {\n      imageRef.current.resize();\n    });\n  }\n\n  function changePosition(fromHome = false) {\n    const page = Data.filter((image) => image.url === location.pathname)[0];\n    var mapPosition;\n    if (page && page.mapPosition) {\n      if (screenWidth && aspectRatio < 1.5 && aspectRatio > 1) {\n        mapPosition = page.mapPosition.tablet;\n      } else if (screenWidth) {\n        mapPosition = page.mapPosition.mobile;\n      } else {\n        mapPosition = page.mapPosition.desktop;\n      }\n      // const mapPosition = screenWidth ? page.mapPosition.mobile : page.mapPosition.desktop;\n\n      //zoom out to show all of map\n      const zoomOut = () =>\n        new Promise((resolve, reject) => {\n          gsap\n            .to(imageRef.current.mesh.position, {\n              x: screenWidth ? -5 : 0,\n              y: 0,\n              z: screenWidth ? 30 : 0,\n              duration: 1.4,\n              delay: 0.2,\n            })\n            .then(() => resolve());\n\n          gsap.to(zoomBlurPass.current.uniforms['strength'], {\n            keyframes: [{ value: 0.1 }, { value: 0.3 }, { value: 0 }],\n            duration: 1.6,\n            delay: 0,\n            ease: Power1.easeOut,\n          });\n        });\n\n      //zoom in to specified location position\n      const zoomIn = (delay = 1.7) =>\n        new Promise((resolve, reject) => {\n          gsap\n            .to(imageRef.current.mesh.position, {\n              x: (mapPosition.x / 100) * threeRef.current.size.wWidth,\n              y: (mapPosition.y / 100) * threeRef.current.size.wHeight,\n              z: mapPosition.z,\n              duration: 1.4,\n              delay: delay,\n            })\n            .then(() => resolve());\n\n          gsap.to(zoomBlurPass.current.uniforms['strength'], {\n            keyframes: [{ value: 0.1 }, { value: 0.3 }, { value: 0 }],\n            duration: 1.6,\n            delay: delay,\n            ease: Power1.easeOut,\n          });\n        });\n\n      //begin animation sequence\n      if (imageRef.current.mesh.position.z > 0 && !fromHome) {\n        //include zoom out\n        Promise.all([zoomOut(), zoomIn()]);\n      } else {\n        //first time loading, just zoom in\n        Promise.all([zoomIn(0.5)]);\n      }\n    }\n  }\n\n  function shouldSwitch() {\n    //only change the texture image when required - prevent performance issues\n\n    if (location.pathname === '/' && imageRef.current.textureName !== 'home') {\n      //change map image to home image\n      imageRef.current.setMap(\n        loader.load(homeImage, (texture) => {\n          imageRef.current.textureName = 'home';\n\n          return texture;\n        })\n      );\n    } else if (location.pathname !== '/' && imageRef.current.textureName === 'home') {\n      //change home image to map image\n      const zoomEffect = () =>\n        gsap.to(zoomBlurPass.current.uniforms['strength'], {\n          keyframes: [{ value: 0.1 }, { value: 0.5 }],\n          duration: 0.6,\n          ease: Power1.easeIn,\n        });\n      const zoomIn = () =>\n        gsap\n          .to(imageRef.current.mesh.position, {\n            z: 99.9,\n            duration: 0.6,\n            delay: 0.2,\n          })\n          .then(() => {\n            //imageRef.current.setMap(loader.load(require(\"./assets/20_6158_Precision_Eyeland-M-Comp_w10-green-test_crop_NEW2_18.jpg\").default,\n            imageRef.current.setMap(\n              loader.load(mapImage, (texture) => {\n                imageRef.current.textureName = 'map';\n                imageRef.current.resize();\n                return texture;\n              })\n            );\n            gsap.to(imageRef.current.mesh.position, {\n              x: (-18 / 100) * threeRef.current.size.wWidth,\n              y: (-2 / 100) * threeRef.current.size.wHeight,\n              z: 99.9,\n              duration: 0,\n            });\n            //make sure aspect ratio is correct\n            setTimeout(() => {\n              imageRef.current.resize();\n            }, 100);\n            changePosition(true);\n          });\n\n      zoomEffect();\n      zoomIn();\n    } else if (location.pathname === '/' && imageRef.current.textureName !== 'map') {\n      return;\n    } else {\n      changePosition();\n    }\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    composer.render();\n  }\n\n  useEffect(() => {\n    //link changed, scroll to top to see map animation\n    window.scrollTo(0, 0);\n\n    //make sure aspect ratio is correct\n    setTimeout(() => {\n      imageRef.current.resize();\n    }, 500);\n\n    //change map position to new location path\n    if (textureLoaded) {\n      shouldSwitch();\n    } else {\n      if (location.pathname !== '/') {\n        changePosition();\n      }\n\n      setTextureLoaded(true);\n    }\n\n    //add browser cookie to save new location path (save for 31 days)\n    setCookie('lastPage', location.pathname, 31);\n  }, [location]);\n\n  return (\n    <>\n      <Header />\n\n      <canvas id='map-container' />\n\n      <Switch>\n        <Route exact path='/'>\n          <Home screenWidth={screenWidth} imageRef={imageRef} />\n        </Route>\n        <Route exact path='/ocular-summit'>\n          <OcularSummit screenWidth={screenWidth} aspectRatio={aspectRatio} />\n        </Route>\n        <Route exact path='/neural-tributaries'>\n          <NeuralCaverns screenWidth={screenWidth} aspectRatio={aspectRatio} />\n        </Route>\n        <Route exact path='/tear-film-shores'>\n          <TearFilm screenWidth={screenWidth} aspectRatio={aspectRatio} />\n        </Route>\n        <Route exact path='/prevalence-point'>\n          <PrevalencePoint screenWidth={screenWidth} aspectRatio={aspectRatio} />\n        </Route>\n        <Route path='*' component={NotFound} />\n      </Switch>\n\n      <Footer />\n\n      <CookieBanner />\n    </>\n  );\n}\n\nexport default App;\n","/Users/Oleg.Plevan/dev/dry-eyeland/src/three-helper.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/helper.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/useWindowDimensions.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/views/OcularSummit.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/views/NeuralCaverns.js",["90","91","92","93","94"],"import React from 'react';\nimport FeatureText from '../components/FeatureText';\nimport ScrollContainer from '../components/ScrollContainer';\nimport SignUp from '../components/SignUp';\nimport '../styles/views/neural-caverns.scss';\nimport NextUp from '../components/NextUp';\nimport TextBlock from '../components/TextBlock';\nimport navTo from '../App';\nimport { Helmet } from 'react-helmet';\n\nexport default function NeuralCaverns(props) {\n  const renderImgOnMobile = <img src={require(`../assets/ocular-layer.jpg`).default} />;\n  const renderVideoOnMobile = (\n    <video autoPlay muted loop playsInline>\n      <source src={require(`../assets/videos/neural-tributaries.mp4`).default} type='video/mp4'></source>\n    </video>\n  );\n  return (\n    <div className='page neural'>\n      <Helmet>\n        <title>Neural Tributaries</title>\n        <meta name='description' content='Lorem ipsum dolor sit amet, consectetur adip.' />\n      </Helmet>\n      <ScrollContainer>\n        <FeatureText\n          image='DED_DSA_NeuralTributaries_Image1.png'\n          title='Lorem ipsum dolor sit amet, consectetur adipiscing elit.<sup>1-4</sup>'\n          body={[\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua..<sup>5</sup>',\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n          ]}\n        />\n\n        <TextBlock\n          className='trigeminal-block'\n          title='Lorem ipsum.<sup>5</sup>'\n          titleAlign='left'\n          //image='ocular-layer.jpg'\n          video='neural-tributaries.mp4'\n          aspectRatio={props.aspectRatio}\n        >\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n            quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\n            cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\n            laborum.\n          </p>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit:</p>\n          <ul>\n            <li>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Doloremque nobis ipsam eum veritatis voluptas magnam. Ea suscipit dicta explicabo\n              blanditiis tempore. Animi cum delectus assumenda facilis nemo quis molestias dolor.\n            </li>\n            <li>\n              Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quasi, dicta? Natus delectus voluptas totam quisquam numquam, quo tempore autem aperiam\n              consequatur alias nulla et deleniti magni excepturi porro minima rem?\n            </li>\n          </ul>\n          <p>\n            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Magnam, debitis earum consequatur quam id alias nemo veritatis, aut qui doloremque ipsum\n            sed nisi nulla ipsam odit in doloribus, sequi illo?\n          </p>\n\n          {props.screenWidth ? <div className='video-container-mob'>{renderVideoOnMobile}</div> : null}\n        </TextBlock>\n\n        <TextBlock className='classification-block' title='Lorem ipsum, dolor sit amet consectetur adipisicing elit' titleAlign='right'>\n          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe alias molestiae animi provident dolore a molestias, facilis perspiciatis.</p>\n\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/basal.svg').default} />\n            </div>\n            <p>\n              Lorem ipsum, dolor sit amet consectetur adipisicing elit. Similique odit aliquid molestias sed, dolor ut labore iure excepturi laborum, quam\n              placeat beatae eos aliquam quia dignissimos error quos aperiam distinctio!\n            </p>\n          </div>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/reflex.svg').default} />\n            </div>\n            <p>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. A, laudantium, porro, quas hic aperiam doloremque modi unde vel similique nihil eligendi\n              velit? Libero iste quis dolorum modi amet nihil voluptatem!\n            </p>\n          </div>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/emotional.svg').default} alt='Lorem ipsum' />\n            </div>\n            <p>\n              Lorem ipsum dolor sit amet consectetur, adipisicing elit. Harum consequatur ducimus aut dolores at sit illo quis fuga explicabo eum! Error\n              similique facere officia et, tempora quas aspernatur mollitia debitis?\n            </p>\n          </div>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/closed.svg').default} alt='Lorem ipsum' />\n            </div>\n            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Harum consequatur ducimus aut dolores at sit.</p>\n          </div>\n        </TextBlock>\n\n        <TextBlock className='did-you-know-block' title='Did you know?' titleAlign='left'>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/bulb.svg').default} alt='Lorem ipsum' />\n            </div>\n            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Harum consequatur ducimus aut dolores at sit.</p>\n          </div>\n        </TextBlock>\n\n        <NextUp url='/tear-film-shores' />\n\n        <SignUp />\n      </ScrollContainer>\n    </div>\n  );\n}\n","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/Home.js",["95","96","97"],"/Users/Oleg.Plevan/dev/dry-eyeland/src/views/TearFilm.js",["98","99"],"import FeatureText from '../components/FeatureText';\nimport React from 'react';\nimport ScrollContainer from '../components/ScrollContainer';\nimport SignUp from '../components/SignUp';\nimport NextUp from '../components/NextUp';\nimport '../styles/views/tear-film.scss';\nimport TextBlock from '../components/TextBlock';\nimport { Helmet } from 'react-helmet';\n\nexport default function TearFilm(props) {\n  const renderImgOnMobile = <img src={require(`../assets/ocular-layer.jpg`).default} />;\n\n  const renderVideoOnMobile = (\n    <video autoPlay muted loop playsInline>\n      <source src={require(`../assets/videos/tear-film-shores.mp4`).default} type='video/mp4'></source>\n    </video>\n  );\n  return (\n    <div className='page tear'>\n      <Helmet>\n        <title>Tear Film Shores</title>\n        <meta name='description' content='lorem ipsum dolor sit am rem, consectetur adipiscing elit non proident.' />\n      </Helmet>\n      <ScrollContainer>\n        <FeatureText\n          image='DED_DSA_TearFilmShores_Image1.png'\n          title='Lorem ipsum dolor sit am rem, con adipiscing elit non proident.<sup>1,3,4</sup>'\n          body={[\n            'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Fuga cumque magni voluptates doloremque! Aspernatur eveniet expedita quaerat fugit dolorum, iste adipisci reprehenderit sequi nam illo velit ullam eligendi nesciunt perspiciatis.<sup>1,3-7</sup>',\n          ]}\n        />\n\n        <TextBlock\n          className='trigeminal-block'\n          title='Lorem ipsum dolor sit amet consectetur, adipisicing elit. Fuga cumque magni voluptates doloremque.<sup>8</sup>'\n          titleAlign='left'\n          //image=\"ocular-layer.jpg\"\n          video='tear-film-shores.mp4'\n          aspectRatio={props.aspectRatio}\n        >\n          <p>\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nam voluptatibus officiis eveniet aperiam necessitatibus soluta quo temporibus officia.\n            Cupiditate libero labore, dolore adipisci dolores assumenda ullam repudiandae corporis amet nobis?\n          </p>\n          {/* Renders main-image here on mobile only */}\n          {props.screenWidth ? <div className='video-container-mob'>{renderVideoOnMobile}</div> : null}\n        </TextBlock>\n\n        <TextBlock className='components-block' title='Lorem, ipsum dolor sit amet consectetur adipisicing elit.' titleAlign='right'>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/mucins.svg').default} alt='Lorem ipsum' />\n            </div>\n            <p>\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aliquid nobis tempore vel quas ullam suscipit cumque fuga, vero laborum, libero expedita\n              blanditiis nesciunt! Aperiam illum quisquam recusandae porro sequi illo!\n            </p>\n          </div>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/aqueous.svg').default} alt='Lorem ipsum' />\n            </div>\n            <p>\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aliquid nobis tempore vel quas ullam suscipit cumque fuga, vero laborum, libero expedita\n              blanditiis nesciunt! Aperiam illum quisquam recusandae porro sequi illo!\n            </p>\n          </div>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/lipids.svg').default} alt='Lorem ipsum' />\n            </div>\n            <p>\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aliquid nobis tempore vel quas ullam suscipit cumque fuga, vero laborum, libero expedita\n              blanditiis nesciunt! Aperiam illum quisquam recusandae porro sequi illo!\n            </p>\n          </div>\n          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Repellendus ullam, minus iste nobis nemo iusto.</p>\n        </TextBlock>\n\n        <TextBlock className='substitute-block' title='There is no substitute for a patient’s own natural tear film.<sup>1,15</sup>' titleAlign='left'>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique vel debitis dolor sequi harum libero at nesciunt illo ducimus, voluptatibus ad\n            quaerat itaque molestiae laboriosam repellendus? Earum expedita reprehenderit error!\n          </p>\n          <ul>\n            <li>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique vel debitis dolor sequi harum libero at nesciunt illo ducimus, voluptatibus ad\n              quaerat itaque molestiae laboriosam repellendus? Earum expedita reprehenderit error!\n            </li>\n            <li>Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique vel debitis dolor sequi harum libero at nesciunt illo ducimus.</li>\n            <li>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique vel debitis dolor sequi harum libero at nesciunt illo ducimus, voluptatibus ad\n              quaerat itaque molestiae laboriosam repellendus?\n            </li>\n          </ul>\n        </TextBlock>\n\n        <TextBlock className='did-you-know-block' title='Did you know?' titleAlign='right'>\n          <div className='icon-text'>\n            <div className='image'>\n              <img src={require('../assets/icons/bulb-blue.svg').default} alt='Lorem ipsum' />\n            </div>\n            <p>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique vel debitis dolor sequi harum libero at nesciunt illo ducimus, voluptatibus ad\n              quaerat itaque molestiae laboriosam repellendus? Earum expedita reprehenderit error!\n            </p>\n          </div>\n        </TextBlock>\n\n        <NextUp url='/prevalence-point' />\n\n        <SignUp />\n      </ScrollContainer>\n    </div>\n  );\n}\n","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/PrevalencePoint.js",["100"],"import FeatureText from '../components/FeatureText';\nimport React, { useEffect } from 'react';\nimport ScrollContainer from '../components/ScrollContainer';\nimport SignUp from '../components/SignUp';\nimport '../styles/views/prevalence-point.scss';\nimport TextBlock from '../components/TextBlock';\n// import Poll from '../components/Poll';\nimport { Helmet } from 'react-helmet';\n\nexport default function PrevalencePoint(props) {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const renderImgOnMobile = <img src={require(`../assets/OP_DSA_PrevalencePoint_Graph.png`).default} />;\n\n  return (\n    <div className='page prevalence'>\n      <Helmet>\n        <title>Prevalence Point</title>\n        <meta name='description' content='' />\n      </Helmet>\n      <ScrollContainer>\n        <FeatureText\n          image='DED_DSA_PrevalencePoint_Image1.png'\n          title='Lorem, ipsum dolor sit amet consectetur adipisicing elit..<sup>1,4,5</sup>'\n          body={[\n            'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Porro laborum sapiente distinctio debitis tenetur dignissimos unde voluptate facilis saepe.',\n            'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Porro laborum sapiente distinctio debitis tenetur dignissimos unde voluptate facilis saepe rem omnis laboriosam.',\n          ]}\n        />\n\n        <TextBlock\n          className='diagnosis-block'\n          title='Lorem, ipsum dolor sit amet consectetur adipisicing elit.'\n          titleAlign='left'\n          image='DED_DSA_PrevalencePoint_Image1.png'\n          aspectRatio={props.aspectRatio}\n        >\n          <p>\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Porro laborum sapiente distinctio debitis tenetur dignissimos unde voluptate facilis saepe\n            rem omnis laboriosam, incidunt eveniet inventore adipisci consectetur ipsa quidem nostrum?\n          </p>\n\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Aut deserunt itaque maiores sapiente tempore quidem voluptate eos fuga, perferendis atque,\n            quos, nihil aspernatur cupiditate? Neque, velit quo. Nihil, ut tenetur!\n          </p>\n\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Aut deserunt itaque maiores sapiente tempore quidem voluptate eos fuga, perferendis atque,\n            quos, nihil aspernatur cupiditate? Neque, velit quo. Nihil, ut tenetur!\n          </p>\n          {/* Renders main-image here on mobile only */}\n          {props.screenWidth ? <div className='video-container-mob'>{renderImgOnMobile}</div> : null}\n        </TextBlock>\n        <SignUp />\n      </ScrollContainer>\n    </div>\n  );\n}\n","/Users/Oleg.Plevan/dev/dry-eyeland/src/views/NotFound.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/components/Header.js",["101"],"import React, { useState, useRef, useEffect } from 'react';\nimport { NavLink, useLocation, Link } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport SignUp from './SignUp';\nimport '../styles/components/header.scss';\nimport Data from '../pageData.json';\n\nexport default function Header(props) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState({ title: '', introText: '' });\n  const menuRef = useRef(null);\n  let location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname !== '/') {\n      //get current page data for the map text overlay\n      const filtered = Data.filter((item) => item.url === location.pathname)[0];\n      setCurrentPage(filtered);\n\n      //close menu when clicking a link\n      menuRef.current.removeEventListener('click', () => {});\n      menuRef.current.addEventListener('click', (e) => {\n        if (e.target.nodeName === 'A') {\n          setMenuOpen(false);\n        }\n      });\n    }\n  }, [location.key]);\n\n  //scroll to next section\n  const scrollDown = () =>\n    document.querySelector('section.feature').scrollIntoView({\n      behavior: 'smooth',\n    });\n\n  //render the menu items\n  const navLinks = Data.slice(1).map((link, index) => (\n    <NavLink key={index} to={link.url}>\n      {link.title}\n    </NavLink>\n  ));\n\n  return (\n    <>\n      <header>\n        <div className={`header-bar${menuOpen ? ' top' : ''}`}>\n          <Link to='/' className='logo' onClick={() => setMenuOpen(false)}>\n            Site Logo\n          </Link>\n          <div className={`menu-icon${menuOpen ? ' open' : ''}`} onClick={() => setMenuOpen(!menuOpen)}>\n            <span />\n            <span />\n            <span />\n          </div>\n        </div>\n\n        <div ref={menuRef} className={`menu${menuOpen ? ' open' : ''}`}>\n          {navLinks}\n          <SignUp />\n        </div>\n      </header>\n      {location.pathname !== '/' && (\n        <section className='hero'>\n          <TransitionGroup>\n            <CSSTransition key={currentPage && currentPage.url} classNames='item' timeout={{ enter: 4200, exit: 200 }}>\n              <div className='content'>\n                <h1>{currentPage && currentPage.title}</h1>\n                <p dangerouslySetInnerHTML={{ __html: currentPage && currentPage.introText }}></p>\n                <div className='scroll-button' onClick={scrollDown}>\n                  Find out more\n                </div>\n              </div>\n            </CSSTransition>\n          </TransitionGroup>\n        </section>\n      )}\n    </>\n  );\n}\n","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/Footer.js",["102","103"],"/Users/Oleg.Plevan/dev/dry-eyeland/src/components/CookieBanner.js",["104"],"/Users/Oleg.Plevan/dev/dry-eyeland/src/components/ScrollContainer.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/components/SignUp.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/components/FeatureText.js",["105"],"import \"../styles/components/feature-text.scss\";\n\nexport default function FeatureText(props) {\n\n    const bodyText = props.body.map((text, index) => <p dangerouslySetInnerHTML={{__html: text}} key={index}></p>);\n\n    return (\n        <section className=\"container feature\">\n            <div className=\"image\">\n                <img src={require(`../assets/${props.image}`).default}/>\n            </div>\n            <div className=\"text\">\n                <h2 dangerouslySetInnerHTML={{__html: props.title}}></h2>\n                {bodyText}\n            </div>\n        </section>\n    )\n}","/Users/Oleg.Plevan/dev/dry-eyeland/src/components/NextUp.js",[],"/Users/Oleg.Plevan/dev/dry-eyeland/src/components/TextBlock.js",["106"],"import \"../styles/components/text-block.scss\";\n\nexport default function TextBlock(props) {\n  const renderImage = props.image ? (\n    <img className='main-image' src={require(`../assets/${props.image}`).default} />\n  ) : null;\n    \n  const renderVideo = props.video ? (\n    <video className='main-image' autoPlay muted loop playsInline>\n      <source src={require(`../assets/videos/${props.video}`).default} type='video/mp4'></source>\n    </video>\n  ) : null;\n\n  return (\n    <section className={`container text-block ${props.className}`}>\n      {window.innerWidth > 768 && !(props.aspectRatio > 1 && props.aspectRatio < 1.5) ? renderVideo : ''}\n      {renderImage}\n      <div className='content'>\n        <h2 className={props.titleAlign} dangerouslySetInnerHTML={{ __html: props.title }}></h2>\n        {props.children}\n      </div>\n    </section>\n  );\n}\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":70,"column":6,"nodeType":"113","endLine":70,"endColumn":8,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":250,"column":6,"nodeType":"113","endLine":250,"endColumn":16,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":8,"column":8,"nodeType":"119","messageId":"120","endLine":8,"endColumn":13},{"ruleId":"117","severity":1,"message":"121","line":12,"column":9,"nodeType":"119","messageId":"120","endLine":12,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":12,"column":29,"nodeType":"124","endLine":12,"endColumn":88},{"ruleId":"122","severity":1,"message":"123","line":72,"column":15,"nodeType":"124","endLine":72,"endColumn":73},{"ruleId":"122","severity":1,"message":"123","line":81,"column":15,"nodeType":"124","endLine":81,"endColumn":74},{"ruleId":"117","severity":1,"message":"125","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":12},{"ruleId":"117","severity":1,"message":"126","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":18},{"ruleId":"111","severity":1,"message":"127","line":21,"column":6,"nodeType":"113","endLine":21,"endColumn":8,"suggestions":"128"},{"ruleId":"117","severity":1,"message":"121","line":11,"column":9,"nodeType":"119","messageId":"120","endLine":11,"endColumn":26},{"ruleId":"122","severity":1,"message":"123","line":11,"column":29,"nodeType":"124","endLine":11,"endColumn":88},{"ruleId":"122","severity":1,"message":"123","line":14,"column":29,"nodeType":"124","endLine":14,"endColumn":104},{"ruleId":"111","severity":1,"message":"129","line":28,"column":6,"nodeType":"113","endLine":28,"endColumn":20,"suggestions":"130"},{"ruleId":"117","severity":1,"message":"125","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"111","severity":1,"message":"131","line":15,"column":6,"nodeType":"113","endLine":15,"endColumn":16,"suggestions":"132"},{"ruleId":"117","severity":1,"message":"133","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":10,"column":17,"nodeType":"124","endLine":10,"endColumn":73},{"ruleId":"122","severity":1,"message":"123","line":5,"column":5,"nodeType":"124","endLine":5,"endColumn":85},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'animate', 'history', 'initScene', and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has missing dependencies: 'changePosition', 'shouldSwitch', and 'textureLoaded'. Either include them or remove the dependency array.",["137"],"no-unused-vars","'navTo' is defined but never used.","Identifier","unusedVar","'renderImgOnMobile' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'logoMobile' is defined but never used.","React Hook useEffect has a missing dependency: 'props.imageRef'. Either include it or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'panel'. Either include it or remove the dependency array.",["140"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [animate, history, initScene, location.pathname]",{"range":"151","text":"152"},"Update the dependencies array to be: [changePosition, location, shouldSwitch, textureLoaded]",{"range":"153","text":"154"},"Update the dependencies array to be: [props.imageRef]",{"range":"155","text":"156"},"Update the dependencies array to be: [location.key, location.pathname]",{"range":"157","text":"158"},"Update the dependencies array to be: [location, panel]",{"range":"159","text":"160"},[2450,2452],"[animate, history, initScene, location.pathname]",[8028,8038],"[changePosition, location, shouldSwitch, textureLoaded]",[708,710],"[props.imageRef]",[1031,1045],"[location.key, location.pathname]",[478,488],"[location, panel]"]